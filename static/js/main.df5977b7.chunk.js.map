{"version":3,"sources":["components/Posts/Post.js","components/Posts/PostList.js","components/Posts/NewPostForm.js","components/Posts/PostDetails.js","components/Layout/Header.js","components/Posts/PostControl.js","components/App.js","serviceWorker.js","reducers/index.js","reducers/post-list-reducer.js","reducers/form-visible-reducer.js","reducers/selected-post-reducer.js","components/InitialState.js","index.js"],"names":["Post","props","preview","body","slice","Fragment","style","padding","Card","Title","paddingLeft","paddingTop","title","Body","Date","postDate","toLocaleString","upvote","downvote","display","justifyContent","Button","variant","onClick","whenPostClicked","id","whenUpvoteClicked","class","whenDownvoteClicked","PostList","cardStyles","marginBottom","Object","values","postList","sort","a","b","map","post","onClickingDownvote","onClickingUpvote","onClickingPost","proTypes","PropTypes","object","func","NewPostForm","marginTop","Form","onSubmit","event","preventDefault","onNewPostCreation","target","value","now","v4","Group","controlId","Label","Control","type","name","placeholder","Text","className","as","rows","margin","PostDetails","Header","Navbar","collapseOnSelect","expand","bg","Brand","href","Toggle","aria-controls","Collapse","Nav","Link","whenButtonClick","buttonText","PostControl","currentView","dispatch","handleUpvote","selectedPost","updatedPost","masterPostList","actionTwo","handleDownvote","formVisible","newPost","thisPost","action","Container","connect","state","App","Boolean","window","location","hostname","match","rootReducer","combineReducers","assign","newState","updatedUpvote","upvoteState","updatedDownvote","downvoteState","nullState","id1","id2","id3","InitialState","store","createStore","__REDUX_DEVTOOLS_EXTENSION__","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.df5977b7.chunk.js","sourcesContent":["import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { Card, Button } from \"react-bootstrap\";\n\nconst Post = (props) => {\n  const buttons = {\n    display: 'flex',\n    justifyContent: 'space-around'\n  };\n\n  const title = {\n    paddingLeft: '20px',\n    paddingTop: '10px'\n  };\n\n  const cardStyles = {\n    padding: '2%'\n  };\n\n  const preview = props.body.slice(0, 125) + \"...\";\n\n  return (\n    <React.Fragment>\n      <div style={cardStyles}>\n        <Card>\n          <Card.Title>\n            <h1 style={title}> {props.title} </h1>\n          </Card.Title>\n          <Card.Body>\n            <p>Posted on {new Date(props.postDate).toLocaleString()}</p>\n            <p>{preview}</p>\n            <p> Total Score: {props.upvote - props.downvote} </p>\n            <p>Up Votes: {props.upvote}</p>\n            <p>Down Votes: {props.downvote}</p>\n            <div style={buttons}>\n              <Button variant=\"outline-secondary\" onClick={() => props.whenPostClicked(props.id)}>\n                Post Details\n              </Button>\n              <Button variant=\"outline-success\" onClick={() => props.whenUpvoteClicked(props.id)}><i class=\"fas fa-thumbs-up\"></i> Up Vote </Button>\n              <Button variant=\"outline-danger\" onClick={() => props.whenDownvoteClicked(props.id)}> <i class=\"fas fa-thumbs-down\"></i> Down Vote </Button>\n            </div>\n          </Card.Body>\n        </Card>\n      </div>\n    </React.Fragment>\n  );\n};\n\nPost.propTypes = {\n  title: PropTypes.string,\n  body: PropTypes.string,\n  upvote: PropTypes.number,\n  downvote: PropTypes.number,\n  postDate: PropTypes.number,\n  id: PropTypes.string,\n  whenUpvoteClicked: PropTypes.func,\n  whenDownvoteClicked: PropTypes.func,\n  whenPostClicked: PropTypes.func\n};\n\nexport default Post;\n","import React from \"react\";\nimport Post from \"./Post\";\nimport PropTypes from \"prop-types\";\n\nconst PostList = (props) => {\n\n  const cardStyles = {\n    marginBottom: '1%',\n    padding: '2%'\n  };\n\n  return (\n    <React.Fragment>\n      {Object.values(props.postList).sort((a, b) => {\n        return (b.upvote - b.downvote) - (a.upvote - a.downvote);\n      }).map((post) => {\n        return (\n          <div style={cardStyles}>\n            <Post\n              title={post.title}\n              postDate={post.postDate}\n              body={post.body}\n              upvote={post.upvote}\n              downvote={post.downvote}\n              whenDownvoteClicked={props.onClickingDownvote}\n              whenUpvoteClicked={props.onClickingUpvote}\n              whenPostClicked={props.onClickingPost}\n              id={post.id}\n            />\n          </div>\n        );\n      })}\n    </React.Fragment>\n  );\n};\n\nPostList.proTypes = {\n  postList: PropTypes.object,\n  onClickingPost: PropTypes.func,\n  onClickingDownvote: PropTypes.func,\n  onClickingUpvote: PropTypes.func\n};\n\nexport default PostList;\n","import React from \"react\";\nimport { Form, Button } from \"react-bootstrap\";\nimport PropTypes from \"prop-types\";\nimport { v4 } from \"uuid\";\n\nconst NewPostForm = (props) => {\n  function handleNewPostSubmission(event) {\n    event.preventDefault();\n    props.onNewPostCreation({\n      title: event.target.title.value,\n      body: event.target.body.value,\n      upvote: 0,\n      downvote: 0,\n      postDate: Date.now(),\n      id: v4()\n    });\n  }\n\n  const title = {\n    marginTop: '5%'\n  }\n\n  const buttonStyles = {\n    margin: 'auto auto',\n    display: 'block',\n  }\n\n  return (\n    <React.Fragment>\n      <h1 style={title}> Add New Post </h1>\n      <Form onSubmit={handleNewPostSubmission}>\n        <Form.Group controlId=\"formBasicTitle\">\n          <Form.Label>Title</Form.Label>\n          <Form.Control type=\"text\" name=\"title\" placeholder=\"title\" />\n          <Form.Text className=\"text-muted\">What do you want to name your post.</Form.Text>\n        </Form.Group>\n        <Form.Group controlId=\"formBasicBody\">\n          <Form.Label>Body</Form.Label>\n          <Form.Control as=\"textarea\" rows=\"3\" name=\"body\" placeholder=\"Give us all the detail\" />\n        </Form.Group>\n\n        <Button style={buttonStyles} variant=\"primary\" type=\"submit\">\n          Submit\n        </Button>\n      </Form>\n    </React.Fragment>\n  );\n};\n\nNewPostForm.propTypes = {\n  onNewPostCreation: PropTypes.func\n};\n\nexport default NewPostForm;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { Card, Button } from \"react-bootstrap\";\n\nconst PostDetails = (props) => {\n  const { post, whenDownvoteClicked, whenUpvoteClicked } = props;\n\n  const cardStyles = {\n    margin: '10px',\n    padding: '2%'\n  };\n\n  const buttons = {\n    display: 'flex',\n    justifyContent: 'space-around'\n  };\n\n  const title = {\n    paddingLeft: '20px',\n    paddingTop: '10px'\n  }\n\n  return (\n    <React.Fragment>\n      <div style={cardStyles}>\n        <Card>\n          <Card.Title>\n            <h1 style={title}> {post.title} </h1>\n          </Card.Title>\n          <Card.Body>\n            <p>Posted on {new Date(post.postDate).toLocaleString()}</p>\n            <p>{post.body}</p>\n            <p> Total Score: {post.upvote - post.downvote} </p>\n            <p>Up Votes: {post.upvote}</p>\n            <p>Down Votes: {post.downvote}</p>\n            <div style={buttons}>\n              <Button variant=\"outline-success\" onClick={() => { whenUpvoteClicked(post.id); }}>\n                <i class=\"fas fa-thumbs-up\"></i> Up Vote\n              </Button>\n              <Button variant=\"outline-danger\" onClick={() => whenDownvoteClicked(post.id)}> <i class=\"fas fa-thumbs-down\"></i> Down Vote</Button>\n            </div>\n          </Card.Body>\n        </Card>\n      </div>\n    </React.Fragment>\n  );\n};\n\nPostDetails.propTypes = {\n  post: PropTypes.object,\n  whenUpvoteClicked: PropTypes.func,\n  whenDownvoteClicked: PropTypes.func\n};\n\nexport default PostDetails;\n","import React from \"react\";\nimport { Navbar, Nav } from \"react-bootstrap\";\n\nconst Header = (props) => {\n  const headerStyles = {};\n  return (\n    <div style={headerStyles}>\n      <Navbar collapseOnSelect expand=\"lg\" bg=\"dark\" variant=\"dark\">\n        <Navbar.Brand href=\"#\">Reddit-Clone</Navbar.Brand>\n        <Navbar.Toggle aria-controls=\"responsive-navbar-nav\" />\n        <Navbar.Collapse id=\"responsive-navbar-nav\">\n          <Nav className=\"mr-auto\">\n            <Nav.Link onClick={props.whenButtonClick}>{props.buttonText}</Nav.Link>\n          </Nav>\n        </Navbar.Collapse>\n      </Navbar>\n    </div>\n  );\n};\n\nexport default Header;\n","import React from \"react\";\nimport PostList from \"./PostList\";\nimport NewPostForm from \"./NewPostForm\";\nimport PostDetails from \"./PostDetails\";\nimport Header from \"../Layout/Header\";\nimport Post from \"./Post\";\nimport { connect } from \"react-redux\";\nimport PropTypes from \"prop-types\";\nimport { Container, Button } from \"react-bootstrap\";\n\nfunction PostControl(props) {\n  const postControlStyles = {};\n  const { dispatch } = props;\n\n  const handleClick = () => {\n    if (props.selectedPost !== null) {\n      const action = {\n        type: \"CHANGE_TO_NULL\"\n      };\n      dispatch(action);\n    } else {\n      const action = {\n        type: \"TOGGLE_FORM\"\n      };\n      dispatch(action);\n    }\n  };\n\n  const handleChangingSelectedPost = (id) => {\n    const thisPost = props.masterPostList[id];\n\n    const action = {\n      type: \"CHANGE_SELECTED\",\n      title: thisPost.title,\n      body: thisPost.body,\n      upvote: thisPost.upvote,\n      downvote: thisPost.downvote,\n      postDate: thisPost.postDate,\n      id: thisPost.id\n    };\n    dispatch(action);\n  };\n\n  const handleUpvote = (id) => {\n    const action = {\n      type: \"UPVOTE\",\n      id: id\n    };\n    dispatch(action);\n    if (props.selectedPost !== null) {\n      const updatedPost = props.masterPostList[id];\n      const actionTwo = {\n        type: \"CHANGE_SELECTED\",\n        id: id,\n        title: updatedPost.title,\n        body: updatedPost.body,\n        upvote: updatedPost.upvote,\n        downvote: updatedPost.downvote,\n        postDate: updatedPost.postDate\n      };\n      dispatch(actionTwo);\n    }\n  };\n\n  const handleDownvote = (id) => {\n    const action = {\n      type: \"DOWNVOTE\",\n      id: id\n    };\n    dispatch(action);\n    if (props.selectedPost !== null) {\n      const updatedPost = props.masterPostList[id];\n      const actionTwo = {\n        type: \"CHANGE_SELECTED\",\n        id: id,\n        title: updatedPost.title,\n        body: updatedPost.body,\n        upvote: updatedPost.upvote,\n        downvote: updatedPost.downvote,\n        postDate: updatedPost.postDate\n      };\n      dispatch(actionTwo);\n    }\n  };\n\n  const handleNewPost = (newPost) => {\n    const { id, title, body, upvote, downvote, postDate } = newPost;\n    const action = {\n      type: \"ADD_POST\",\n      id: id,\n      title: title,\n      body: body,\n      upvote: upvote,\n      downvote: downvote,\n      postDate: postDate\n    };\n    dispatch(action);\n    const actionTwo = { type: \"TOGGLE_FORM\" };\n    dispatch(actionTwo);\n  };\n\n  let currentView;\n  let buttonText;\n  if (props.selectedPost !== null) {\n    currentView = (\n      <PostDetails post={props.selectedPost} whenUpvoteClicked={handleUpvote} whenDownvoteClicked={handleDownvote} />\n    );\n    buttonText = \"return to posts\";\n  } else if (props.formVisible) {\n    currentView = <NewPostForm onNewPostCreation={handleNewPost} />;\n    buttonText = \"return to posts\";\n  } else {\n    currentView = (\n      <PostList\n        postList={props.masterPostList}\n        onClickingPost={handleChangingSelectedPost}\n        onClickingUpvote={handleUpvote}\n        onClickingDownvote={handleDownvote}\n      />\n    );\n    buttonText = \"Add Post\";\n  }\n\n  return (\n    <React.Fragment>\n      <Header buttonText={buttonText} whenButtonClick={handleClick} />\n      <Container style={postControlStyles}>{currentView}</Container>\n    </React.Fragment>\n  );\n}\n\nPostControl.propTypes = {\n  masterPostList: PropTypes.object\n};\n\nconst mapStateToProps = (state) => {\n  // const newOrder = Object.values(state.masterPostList).sort((a, b) => {\n  //   return (b.upvote - b.downvote) - (a.upvote - a.downvote);\n  // });\n\n  return {\n    masterPostList: state.masterPostList,\n    formVisible: state.formVisible,\n    selectedPost: state.selectedPost\n  };\n};\n\nPostControl = connect(mapStateToProps)(PostControl);\n\nexport default PostControl;\n","import React from \"react\";\nimport \"../App.css\";\n// import Header from \"./Layout/Header\";\nimport PostControl from \"./Posts/PostControl\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <PostControl />\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import formVisibleReducer from \"./form-visible-reducer\";\nimport postListReducer from \"./post-list-reducer\";\nimport selectedPostReducer from \"./selected-post-reducer\";\nimport { combineReducers } from \"redux\";\n\nconst rootReducer = combineReducers({\n  masterPostList: postListReducer,\n  formVisible: formVisibleReducer,\n  selectedPost: selectedPostReducer\n});\n\nexport default rootReducer;\n","export default (state = {}, action) => {\n  const { title, body, upvote, downvote, postDate, id } = action;\n  switch (action.type) {\n    case \"ADD_POST\":\n      return Object.assign({}, state, {\n        [id]: {\n          title: title,\n          body: body,\n          upvote: upvote,\n          downvote: downvote,\n          postDate: postDate,\n          id: id\n        }\n      });\n\n    case \"DELETE_POST\":\n      const newState = { ...state };\n      delete newState[id];\n      return newState;\n\n    case \"UPVOTE\":\n      const updatedUpvote = (state[id].upvote += 1);\n      const upvoteState = { ...state, [id]: { ...state[id], upvote: updatedUpvote } };\n      return upvoteState;\n\n    case \"DOWNVOTE\":\n      const updatedDownvote = (state[id].downvote += 1);\n      const downvoteState = { ...state, [id]: { ...state[id], downvote: updatedDownvote } };\n      return downvoteState;\n\n    default:\n      return state;\n  }\n};\n","export default (state = false, action) => {\n  switch (action.type) {\n    case \"TOGGLE_FORM\":\n      return !state;\n    default:\n      return state;\n  }\n};\n","export default (state = null, action) => {\n  const { title, body, upvote, downvote, postDate, id } = action;\n\n  switch (action.type) {\n    case \"CHANGE_SELECTED\":\n      const newState = {\n        title: title,\n        body: body,\n        upvote: upvote,\n        downvote: downvote,\n        postDate: postDate,\n        id: id\n      };\n      return newState;\n    case \"CHANGE_TO_NULL\":\n      const nullState = null;\n      return nullState;\n    default:\n      return state;\n  }\n};\n","import { v4 } from 'uuid';\n\nconst id1 = v4();\nconst id2 = v4();\nconst id3 = v4();\n\nconst InitialState = {\n  masterPostList: {\n    [id1]: {\n      title: \"Cats are cool\",\n      body:\n        \"Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum.\",\n      upvote: 3,\n      downvote: 2,\n      postDate: 1588105367958,\n      id: id1\n    },\n    [id2]: {\n      title: \"My dog is cuter than your cat\",\n      body:\n        \"Astrodonius Xuanhanosaurus Giganotosaurus Tendaguria Pinacosaurus Kaatedocus Troodon Dracopelta Coeluroides Banji Pterospondylus Agujaceratops Basutodon Epichirostenotes Nanosaurus Tawa Piveteausaurus Telmatosaurus Austrocheirus Herrerasaurus Stygivenator Sonidosaurus Protiguanodon Tatankaceratops Hypacrosaurus Angolatitan Europasaurus Yandusaurus Cruxicheiros Turiasaurus\",\n      upvote: 10,\n      downvote: 2,\n      postDate: 1588105396294,\n      id: id2\n    },\n    [id3]: {\n      title: \"Check out this bird video\",\n      body:\n        \"Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Mauris sit amet massa vitae tortor condimentum. Facilisis gravida neque convallis a cras. Est ullamcorper eget nulla facilisi. Vitae nunc sed velit dignissim sodales. Netus et malesuada fames ac turpis egestas integer eget aliquet. Suscipit adipiscing bibendum est ultricies. Varius sit amet mattis vulputate. Sit amet consectetur adipiscing elit pellentesque habitant. Vehicula ipsum a arcu cursus. Sit amet mattis vulputate enim nulla. Nisi est sit amet facilisis magna etiam tempor orci eu. Morbi non arcu risus quis varius. Adipiscing at in tellus integer feugiat scelerisque varius morbi enim.\",\n      upvote: 1,\n      downvote: 2,\n      postDate: 1588105407252,\n      id: id3\n    }\n  },\n  selectedPost: null,\n  formVisible: false\n};\n\nexport default InitialState;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./components/App\";\nimport * as serviceWorker from \"./serviceWorker\";\nimport { createStore } from \"redux\";\nimport { Provider } from \"react-redux\";\nimport rootReducer from \"./reducers/index\";\nimport InitialState from \"./components/InitialState\";\n\nconst store = createStore(\n  rootReducer,\n  InitialState,\n  window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__()\n);\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById(\"root\")\n);\n\nserviceWorker.unregister();\n"],"sourceRoot":""}